---
name: CI-Builder

on:
  # Trigger at every push. Action will also be visible from Pull Requests to main
  push:
  workflow_dispatch:

env:
  IMAGE_REPO: 5irechain
  IMAGE_VERSION: ${{ github.event.release.tag_name }}
  IMAGE_NAME: "faucet"

concurrency:
  group: ${{ github.actor }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  # ######################################################
  # # Lint the whole non Rust codebase using Mega Linter #
  # ######################################################
  # megalint:
  #   name: Mega-Linter
  #   runs-on: [self-hosted, small-runner]
  #   steps:
  #     # Git Checkout
  #     - name: Checkout Code
  #       uses: actions/checkout@v2
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         fetch-depth: 0
  #     - name: Lint Rest of Codebase
  #       id: ml
  #       # You can override Mega-Linter flavor used to have faster performances
  #       # More info at https://megalinter.github.io/flavors/
  #       uses: megalinter/megalinter@main
  #       env:
  #         # Apply linter fixes configuration
  #         APPLY_FIXES: all # When active, APPLY_FIXES must also be defined as environment variable (in github/workflows/mega-linter.yml or other CI tool)
  #         APPLY_FIXES_EVENT: all # Decide which event triggers application of fixes in a commit or a PR (pull_request, push, all)
  #         APPLY_FIXES_MODE: pull_request # If APPLY_FIXES is used, defines if the fixes are directly committed (commit) or posted in a PR (pull_request)
  #         ACTION_ACTIONLINT_DISABLE_ERRORS: true

  #         # All available variables are described in documentation
  #         # https://megalinter.github.io/configuration/
  #         VALIDATE_ALL_CODEBASE: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }} # Validates all source when push on main, else just the git diff with main. Override with true if you always want to lint all sources
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         # ADD YOUR CUSTOM ENV VARIABLES HERE OR DEFINE THEM IN A FILE .mega-linter.yml AT THE ROOT OF YOUR REPOSITORY
  #         DISABLE: COPYPASTE, SPELL # Uncomment to disable copy-paste and spell checks
  #         DISABLE_LINTERS: DOCKERFILE_DOCKERFILELINT,SPELL_MISSPELL,SPELL_CSPELL,YAML_PRETTIER,YAML_YAMLLINT,YAML_V8R,JSON_JSONLINT,JSON_ESLINT_PLUGIN_JSONC,JSON_V8R,JSON_PRETTIER,RUST_CLIPPY,GIT_GIT_DIFF
  #     # Upload Mega-Linter artifacts
  #     - name: Archive production artifacts
  #       if: ${{ success() }} || ${{ failure() }}
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Mega-Linter reports
  #         path: |
  #           report
  #           mega-linter.log
  #     # Clean the workspace before changing branches or doing any of below git actions
  #     - name: Clean workspace
  #       if: ${{ success() }} || ${{ failure() }}
  #       run: git clean -d -f
  #     # Create pull request if applicable (for now works only on PR from same repository, not from forks)
  #     - name: Create Pull Request with applied fixes
  #       id: cpr
  #       if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'pull_request' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, 'skip fix')
  #       uses: peter-evans/create-pull-request@v3
  #       with:
  #         token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
  #         commit-message: "[Mega-Linter] Apply linters automatic fixes"
  #         title: "[Mega-Linter] Apply linters automatic fixes"
  #         labels: bot
  #         signoff: true
  #     - name: Create PR output
  #       if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'pull_request' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, 'skip fix')
  #       run: |
  #         echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
  #         echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
  #     - name: Commit and push applied linter fixes
  #       if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit' && github.ref != 'refs/heads/master' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, 'skip fix')
  #       uses: stefanzweifel/git-auto-commit-action@v4
  #       with:
  #         branch: ${{ github.event.pull_request.head.ref || github.head_ref || github.ref }}
  #         commit_message: "[Mega-Linter] Apply linters fixes"

  ########################################################################
  # Build and Publish the Docker Image with the latest codebase          #
  # p.s: maybe this can be removed in favour of code_builder             #
  ########################################################################
  artifact_build_and_push:
    name: Release new Docker Image
    runs-on: [self-hosted]
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.docker-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Docker Build
        id: docker_build
        run: |
          docker build -f Dockerfile -t ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}} .

      - name: Docker Tag
        id: docker_tag
        run: |
          if [[ "${{ env.IMAGE_VERSION }}" != "" ]]; then
            echo "Tagging image with Image Version: ${{ env.IMAGE_VERSION }}"
            docker tag ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}} ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ env.IMAGE_VERSION }}
          fi
          echo "Tagging image with Image Commit ID: ${{ github.sha }}"
          docker tag ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}} ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ github.sha }}
          echo "Tagging image with Image Run Number: ${{ github.run_number }}"
          docker tag ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}} ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ github.run_number }}

      - name: Docker Push
        id: docker_push
        run: |
          if [[ "${{ env.IMAGE_VERSION }}" != "" ]]; then
            docker push ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ env.IMAGE_VERSION }}
          fi
          docker push ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ github.sha }}
          docker push ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:latest
          docker push ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ github.run_number }}

  ###################
  # Update manifest #
  ###################
  update_manifest:
    name: Update the manifests
    runs-on: self-hosted
    needs: artifact_build_and_push
    steps:
      - uses: actions/checkout@v2
        with:
          repository: "5ire-org/5ire-infrastructure"
          ssh-key: "${{ secrets.DEPLOY_KEY }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
          ref: "develop"

      - name: Update the manifest files - local
        run: |
          sed -i "s|${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}.*|${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ github.run_number }}|g" ${{ github.workspace }}/argocd-charts/${{ env.IMAGE_REPO }}/faucet/faucet.yml;
      - name: Update the manifest files - remote
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: "develop"
          commit_message: "Update ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}} image tag in the manifests"
          commit_options: "--signoff"
